name: DEERKING-NextJS CICD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: ubuntu-24.04
    environment: DEERKING

    env:
      HOST: ${{ secrets.EC2_EZEN_HOST }}
      USER: ${{ secrets.EC2_EZEN_USER }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_EZEN_KEY }}
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Update Source Code on EC2
        run: |
          set -e
          ssh $USER@$HOST << 'EOF'
            # 프로젝트 디렉토리가 없으면 git clone, 있으면 최신 커밋 pull
            if [ ! -d /home/ubuntu/dadok-project-frontend ]; then
              echo "Directory not found. Cloning repository..."
              git clone https://github.com/deerking0923/dadok-project-frontend.git /home/ubuntu/dadok-project-frontend
            else
              echo "Directory exists. Resetting and pulling latest changes..."
              cd /home/ubuntu/dadok-project-frontend
              git reset --hard HEAD
              git pull
            fi
          EOF

      - name: Install Dependencies and Build
        run: |
          set -e
          ssh $USER@$HOST << 'EOF'
            # nvm 환경 로드 및 원하는 버전 사용
            source ~/.nvm/nvm.sh
            nvm use 22.13.0

            cd /home/ubuntu/dadok-project-frontend
            npm install
            npm run build
          EOF

      - name: Build Docker Image
        run: |
          ssh $USER@$HOST "cd /home/ubuntu/dadok-project-frontend && sudo docker build -t $DOCKER_USERNAME/dadok-frontend:latest ."

      - name: Deploy Application via Docker
        run: |
          ssh $USER@$HOST << 'EOF'
            # 기존 애플리케이션 종료
            sudo docker ps -q --filter "name=dadok-frontend" | xargs -r sudo docker stop
            sudo docker ps -q --filter "name=dadok-frontend" | xargs -r sudo docker rm
            sudo docker rmi $(sudo docker images -f "dangling=true" -q)
            sudo docker rm -f dadok-frontend
            # 새 도커 컨테이너 실행
            sudo docker run -d --name dadok-frontend -p 3000:3000 realdeer/dadok-frontend:latest
            # 실행 확인
            sudo docker logs --tail 10 dadok-frontend
          EOF
