name: DEERKING-NextJS CICD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: ubuntu-24.04
    environment: DEERKING

    env:
      HOST: ${{ secrets.ORACLE_NEXTJS_HOST }}
      USER: ${{ secrets.ORACLE_NEXTJS_USER }}
      DATA4LIBRARY_AUTH_KEY: ${{ secrets.DATA4LIBRARY_AUTH_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure SSH Key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ORACLE_NEXTJS_KEY }}
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Update Source Code on Oracle
        run: |
          set -e
          ssh $USER@$HOST << 'EOF'
            # 프로젝트 디렉토리가 없으면 git clone, 있으면 최신 커밋 pull
            if [ ! -d /home/ubuntu/dadok-project-frontend ]; then
              echo "Directory not found. Cloning repository..."
              git clone gh repo clone deerking0923/dadok-project-frontend /home/ubuntu/dadok-project-frontend
            else
              echo "Directory exists. Resetting and pulling latest changes..."
              cd /home/ubuntu/dadok-project-frontend
              git reset --hard HEAD
              git pull
            fi
          EOF

      - name: Install Dependencies and Build
        run: |
          set -e
          ssh $USER@$HOST << 'EOF'
            # nvm 환경 로드 및 원하는 버전 사용
            source ~/.nvm/nvm.sh
            nvm use 22.13.0

            cd /home/ubuntu/dadok-project-frontend
            npm install
            npm run build
          EOF

      - name: Deploy Application via PM2
        run: |
          set -e
          ssh $USER@$HOST << 'EOF'
            source ~/.nvm/nvm.sh
            nvm use 22.13.0
            cd /home/ubuntu/dadok-project-frontend

            # 이미 deer-side 프로세스가 있다면 중지 후 삭제
            if pm2 describe deer-side > /dev/null; then
              echo "Stopping existing PM2 process..."
              pm2 stop deer-side || true
              pm2 delete deer-side || true
            fi

            echo "Starting PM2 process..."
            pm2 start npm --name "deer-side" -- run start || { echo "Start failed"; exit 1; }
            pm2 save || { echo "PM2 save failed"; exit 1; }
          EOF

      - name: Debug PM2 Logs
        run: |
          ssh $USER@$HOST << 'EOF'
            source ~/.nvm/nvm.sh
            nvm use 22.13.0

            pm2 list
            pm2 logs deer-side --nostream --lines 100 || true
          EOF
